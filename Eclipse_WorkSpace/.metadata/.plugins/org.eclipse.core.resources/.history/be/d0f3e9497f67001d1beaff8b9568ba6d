package messageHandler;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

public class AllMessages {
    public static LocalDateTime myDateObj = LocalDateTime.now();
    public static final DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm:ss");
	private static final DateTimeFormatter MY_FORMAT_OBJ = myFormatObj;
    public static String dTime  = myDateObj.format(MY_FORMAT_OBJ);
    public static List<String> AllMessages = new ArrayList<>();
    public static List<String> AllMessagesT = new ArrayList<>();
    public static List<Boolean> visibleToConsole = new ArrayList<>();
    public static String addMessage(String message, boolean VisibleToConsole){
        AllMessages.add(message);
        myDateObj = LocalDateTime.now();
        MY_FORMAT_OBJ = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm:ss");
        dTime  = myDateObj.format(MY_FORMAT_OBJ);
        AllMessagesT.add("[" + dTime + "]" + message);
        visibleToConsole.add(VisibleToConsole);
        return message;
    }

    public static boolean clearMessages(){
        AllMessages.clear();
        AllMessagesT.clear();
        visibleToConsole.clear();
        return true;
    }

    public static int size(){// Normal array (Get) size
        return AllMessages.size();
    }

    public static String getLastMessage() {
        int size = AllMessages.size();
        size --;
        if(size > 0){
            if(ConsoleSettings.timeSet){
                return AllMessagesT.get(size);
            }else if(!ConsoleSettings.timeSet){
                return AllMessages.get(size);
            }else {
                MessageHandler.handleMessage(-2, "An Error Occured While Getting Time Setting (E)", true);
                return "";
            }
        }else {
            return "No Messages";
        }
    }

    public static boolean setLastVisibleSet(boolean b) {
        int size = visibleToConsole.size();
        size --;
        visibleToConsole.set(size, b);
        return true;
    }

    public static String getTime(){
        myDateObj = LocalDateTime.now();
        MY_FORMAT_OBJ = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm:ss");
        dTime  = myDateObj.format(MY_FORMAT_OBJ);
        return dTime;
    }
}
